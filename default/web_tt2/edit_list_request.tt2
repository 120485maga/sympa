<!-- edit_list_request.tt2 -->
[%# Block definitions ~%]

[%~ BLOCK EditListSet # (ppaths,pitem,val) ~%]
  <!-- set -->
  [% IF pitem.privilege == 'write' ~%]
    <select name="multiple_param.[% ppaths.join('.') %]"
     id="param.[% ppaths.join('.') %]"
     multiple="multiple" size="[% pitem.format.size() %]"
     [%~ IF pitem.field_type == 'lang' %] class="neutral"[% END %]>
    [% FOREACH enum = pitem.format ~%]
      <option value="[% enum %]"
       [%~ FOREACH v = val ~%]
         [%~ IF enum == v %] selected="selected"[% END %]
       [%~ END %]
       [%~ IF pitem.field_type == 'lang' %] lang="[% enum %]"
         xml:lang="[% enum %]"[% END %]>
      [%~ enum | optdesc(pitem.field_type,is_listmaster) ~%]
      </option>
    [% END %]
    </select>
  [%~ ELSE ~%]
    [% FOREACH enum = pitem.format ~%]
      [% FOREACH v = val ~%]
        [% IF enum == v ~%]
          [%~ IF pitem.field_type == 'lang' ~%]
            <span class="neutral" lang="[% enum %]" xml:lang="[% enum %]">
          [%~ END ~%]
          [% enum | optdesc(pitem.field_type,is_listmaster) %]
          [%~ IF pitem.field_type == 'lang' ~%]
            </span>
          [%~ END %]

          [%~ LAST %]
        [%~ END %]
      [% END %]
    [%~ END %]
  [%~ END %]
  <!-- end set -->
[%~ END ~%]

[%~ BLOCK EditListArrayDel # (ppaths,pitem) ~%]
  <!-- del -->
  [% IF pitem.privilege == 'write' ~%]
    <input type="checkbox" name="deleted_param.[% ppaths.join('.') %]"
     id="del.[% ppaths.join('.') %]"
     class="fadeIfChecked" data-selector="#item\.[% ppaths.join('\\.') %]"
     value="del" />
    <label for="del.[% ppaths.join('.') %]">[%|loc%]Delete[%END%]</label>
  [%~ END %]
  <!-- end del -->
[%~ END ~%]

[%~ BLOCK EditListLeaf # (ppaths,pitem,val) ~%]
  [% IF pitem.enum ~%]
    [% PROCESS EditListEnum %]
  [%~ ELSIF pitem.scenario ~%]
    [% PROCESS EditListScenario %]
  [%~ ELSIF pitem.task ~%]
    [% PROCESS EditListTask %]
  [%~ ELSIF pitem.datasource ~%]
    [% PROCESS EditListDatasource %]
  [%~ ELSE ~%]
    [% PROCESS EditListScalar %]
  [%~ END %]
[%~ END ~%]

[%~ BLOCK EditListEnum # (ppaths,pitem,val) ~%]
  <!-- enum -->
  [% IF pitem.privilege == 'write' ~%]
    <select name="single_param.[% ppaths.join('.') %]"
     id="param.[% ppaths.join('.') %]"
     [%~ IF pitem.field_type == 'lang' %] class="neutral"[% END %]>
    [% IF pitem.occurrence.match('^0') || val.length() == 0 %][%# FIXME ~%]
      <option value=""></option>
    [%~ END %]
    [% FOREACH enum = pitem.format ~%]
      <option value="[% enum %]"
       [%~ IF enum == val %] selected="selected"[% END %]
       [%~ IF pitem.field_type == 'lang' %] lang="[% enum %]"
       xml:lang="[% enum %]"[%END%]>
      [%~ enum | optdesc(pitem.field_type,is_listmaster) ~%]
      </option>
    [% END %]
    </select>
  [%~ ELSE ~%]
    [% FOREACH enum = pitem.format ~%]
      [% IF enum == val ~%]
        [% IF pitem.field_type == 'lang' ~%]
          <span class="neutral" lang="[% enum %]" xml:lang="[% enum %]">
        [%~ END ~%]
        [% enum | optdesc(pitem.field_type,is_listmaster) %]
        [%~ IF pitem.field_type == 'lang' ~%]
          </span>
        [%~ END %]

        [%~ LAST %]
      [%~ END %]
    [%~ END %]
  [%~ END %]
  <!-- end enum -->
[%~ END ~%]

[%~ BLOCK EditListScenario # (ppaths,pitem,val) ~%]
  <!-- scenario -->
  [% IF pitem.privilege == 'write' ~%]
    <select name="single_param.[% ppaths.join('.') %].name"
     id="param.[% ppaths.join('.') %]">
    [% FOREACH scenario = pitem.format ~%]
      [% UNLESS scenario.value.name == 'default' ~%]
        <option value="[% scenario.value.name %]"
         [%~ IF scenario.value.name == val.name %] selected="selected"[% END %]>
        [%~ scenario.value.title %]
        [%~ IF is_listmaster %] ([% scenario.value.name %])[% END ~%]
        </option>
      [%~ END %]
    [% END %]
    </select>
  [%~ ELSE ~%]
    [% FOREACH scenario = pitem.format ~%]
      [% IF scenario.value.name == val.name ~%]
        [% scenario.value.title %]
        [%~ IF is_listmaster %] ([% scenario.value.name %])[% END %]
      [%~ END %]
    [%~ END %]
  [%~ END %]
  <!-- end scenario -->
[%~ END ~%]

[%~ BLOCK EditListTask # (ppaths,pitem,val) ~%]
  <!-- task -->
  [% IF pitem.privilege == 'write' ~%]
    <select name="single_param.[% ppaths.join('.') %].name"
     id="param.[% ppaths.join('.') %]">
    [% IF pitem.occurrence.match('^0') || val.length() == 0 %][%# FIXME ~%]
      <option value=""></option>
    [%~ END %]
    [% FOREACH task = pitem.format ~%]
      <option value="[% task.value.name %]"
       [%~ IF task.value.name == val.name %] selected="selected"[% END %]>
      [%~ task.value.title %]
      [%~ IF is_listmaster %] ([% task.value.name %])[% END ~%]
      </option>
    [% END %]
    </select>
  [%~ ELSE ~%]
    [% FOREACH task = pitem.format ~%]
      [% IF task.value.name == val.name ~%]
        [% task.value.title %]
        [%~ IF is_listmaster %] ([% task.value.name %])[% END %]
      [%~ END %]
    [%~ END %]
  [%~ END %]
  <!-- end task -->
[%~ END ~%]

[%~ BLOCK EditListDatasource # (ppaths,pitem,val) ~%]
  <!-- datasource -->
  [% IF pitem.privilege == 'write' ~%]
    <select name="single_param.[% ppaths.join('.') %]"
     id="param.[% ppaths.join('.') %]">
    [% IF pitem.occurrence.match('^0') || val.length() == 0 %][%# FIXME ~%]
      <option value=""></option>
    [%~ END %]
    [% FOREACH source = pitem.format ~%]
      <option value="[% source.value.name %]"
       [%~ IF source.value.name == val %] selected="selected"[% END %]>
      [%~ source.value.title %]
      [%~ IF is_listmaster %] ([% source.value.name %])[% END ~%]
      </option>
    [% END %]
    </select>
  [%~ ELSE ~%]
    [% FOREACH source = pitem.format ~%]
      [% IF source.value.name == val ~%]
        [% source.value.title %]
        [%~ IF is_listmaster %] ([% source.value.name %])[% END %]
      [%~ END %]
    [%~ END %]
  [%~ END %]
  <!-- end datasource -->
[%~ END ~%]

[%~ BLOCK EditListScalar # (ppaths,pitem,val) ~%]
  <!-- scalar -->
  [% IF pitem.privilege == 'write' ~%]
    [% IF pitem.unit ~%]
      <span style="display:inline-block">[%# FIXME %]
    [%~ END %]
    <input name="single_param.[% ppaths.join('.') %]"
     id="param.[% ppaths.join('.') %]"
     value="[% val %]" size="[% pitem.length %]"
     [%~ IF pitem.field_type == 'password' %] type="password"
     [%~ ELSE %] type="text"
     [%~ END %]
     [%~ IF pitem.field_type == 'lang' %] class="neutral"[% END %] />
    [% IF pitem.unit ~%]
      </span>
    [%~ END %]

    [% pitem.unit %]
  [%~ ELSE ~%]
    [% IF pitem.field_type == 'lang' ~%]
      <span class="neutral" lang="[% val %]" xml:lang="[% val %]">
    [%~ END ~%]
    [% IF pitem.field_type ~%]
      [% val | optdesc(pitem.field_type,is_listmaster) %]
    [%~ ELSE ~%]
      [% val %]
    [%~ END %]
    [%~ IF pitem.field_type == 'lang' ~%]
      </span>
    [%~ END %]

    [% IF val.length() ~%]
      [% pitem.unit %]
    [%~ END %]
  [%~ END %]
  <!-- end scalar -->
[%~ END ~%]









[% IF path_info.match('/data_source$') ~%]
<style>
.radiobox > input[type=radio] {
  display: none;
}

.radiobox > input[type=radio] + label {
  text-transform: uppercase;
  margin: 4px;
  font-size: 14px;
  display: block;
  background: #fff;
  color: rgba(0, 0, 0, .5);
  border-radius: 2px;
  padding: 8px;
  text-align: center;
  user-select: none;
  cursor: pointer;
}

.radiobox > input[type=radio]:checked + label {
  background: #004b94;
  color: #fff;
}

.radiobox > input[type=radio]:disabled + label {
  opacity: .4;
}

.caps {
  text-transform: capitalize;
}

.ds-form > label > select,
.ds-form > label > input,
.ds-form > label > span,
.ds-form > label {
  display: block;
}

.datasources {
  width: 100%;
  display: flex;
  padding-top: 32px;
}

.ds-col {
  box-sizing: border-box;
}

.ds-list-title {
  font-size: 14px;
  color: #999;
  line-height: 32px;
  margin-bottom: 5px;
  font-weight: 700;
}

.ds-list {
  border-bottom: 1px solid #d8d8d8;
  padding: 0;
  margin: 0;
  user-select: none;
}

.ds-list-item {
  position: relative;
  padding: 16px;
  margin: 0;
  cursor: pointer;
  transition: .4s;
}

.ds-list-item:hover {
  background-color: #d8d8d8;
}

.ds-list-item__title {
  display: block;
  font-size: 16px;
  color: #004b94;
}

.ds-list-item__subtitle {
  display: block;
  font-size: 14px;
  height: 18px;
}

.txt-errored,
.ds-list-item__subtitle--errored {
  color: #d0011b;
}

.ds-list-item__action {
  position: absolute;
  right: 0;
  top: 0;
  padding: 32px 16px;
}

@media screen and (min-width: 981px) {
  .ds-col--left {
    width: 300px;
    border-right: 1px solid #979797;
  }

  .ds-col--right {
    width: calc(100% - 300px);
  }
}

@media screen and (max-width: 980px) {
  .datasources {
    display: block;
  }

  .ds-col {
    width: 100%;
  }
}
</style>
<div id="app">
  <sympa-datasources></sympa-datasources>
</div>
<script src="https://unpkg.com/vue"></script>
<script>
// components
Vue.component('sympa-datasources', {
  data() {
    return {
      new_source: {},
      defaults: {
        new_source: {
          type: '',
          for: '',
          values: {},
        },
      },
      page: 'settings',
      sidebar: [],
      settings: [
        {
          name: 'inclusion_notification_feature',
          default: 'off',
          type: 'select',
          options: [
            {
              name: 'disabled',
              value: 'off',
            },
            {
              name: 'enabled',
              value: 'on',
            }
          ],
        },
        {
          name: 'sql_fetch_timeout',
          default: '300',
          type: 'seconds',
        },
      ],
      sources: [
        {
          id: 'id001',
          details: 'Errors in last sync',
          type: 'ldap_query',
          for: 'members',
          errored: true,
          values: {
            name: 'students',

          },
        },
        {
          id: 'id002',
          details: '32 members imported',
          type: 'sympa_list',
          for: 'members',
          errored: false,
          values: {
            name: 'example',

          },
        },
        {
          id: 'id003',
          details: '5 members manually subscribed',
          type: 'manual_subscription',
          for: 'members',
          errored: false,
          values: {

          },
        },
        {
          id: 'id004',
          details: '2 owners specified',
          type: 'manual_subscription',
          for: 'owners',
          errored: false,
          values: {

          },
        },
        {
          id: 'id005',
          details: '12 moderators imported',
          type: 'sql_query',
          for: 'moderators',
          errored: false,
          values: {
            name: 'test',
            db_type: 'postgresql',
          },
        },
        {
          id: 'id006',
          details: '12 attributes imported',
          type: 'sql_query',
          for: 'custom',
          errored: false,
          values: {
            name: 'test',
            db_type: 'mysql',
          },
        },
      ],
      types: {
        ldap_query: {
          fields: [
            {
              name: 'name',
              required: true,
              default: '',
              type: 'text',
            },
          ],
        },
        manual_subscription: {
          fields: [],
        },
        sql_query: {
          fields: [
            {
              name: 'name',
              required: true,
              default: '',
              type: 'text',
            },
            {
              name: 'db_type',
              default: '',
              type: 'select',
              options: [
                {
                  name: 'MySQL',
                  value: 'mysql',
                },
                {
                  name: 'PostgreSQL',
                  value: 'postgresql',
                }
              ],
            },
          ],
        },
        sympa_list: {
          fields: [
            {
              name: 'name',
              required: true,
              default: '',
              type: 'text',
            },
          ],
        },
      },
      strings: {
        sources: {
          ldap_query: 'LDAP query',
          manual_subscription: 'manual subscriptions',
          sql_query: 'SQL query',
          sympa_list: 'list inclusion',
        },
        categories: {
          members: 'Members',
          moderators: 'Moderators',
          owners: 'Owners',
          custom: 'Custom attributes',
        },
        settings: {
          general: 'Data sources settings',
          general_description: 'General syncing parameters',
          add: 'Add new data source',
          add_description: 'Import data from external source',
          seconds: 'seconds',
          next: 'Next',
          save: 'Save',
          edit: 'Edit',
          ds_destination: 'Data source destination',
          ds_type: 'Data source type',
        },
        fields: {
          name: 'short name for this source',
          db_type: 'database type',
          inclusion_notification_feature: 'Notify subscribers when they are included from a data source?',
          sql_fetch_timeout: 'Timeout for fetch of include_sql_query',
        },
      },
    };
  },
  template: `<div class="datasources">
    <div class="ds-col ds-col--left">
      <ul class="ds-list">
        <li class="ds-list-item" @click="changePage('settings')">
          <span class="ds-list-item__title">
            {{ strings.settings.general }}
          </span>
          <span class="ds-list-item__subtitle">
            {{ strings.settings.general_description }}
          </span>
          <span class="ds-list-item__action">
            <i aria-hidden="true" class="fa fa-arrow-right"></i>
          </span>
        </li>
        <li class="ds-list-item" @click="changePage('new')">
          <span class="ds-list-item__title">
            {{ strings.settings.add }}
          </span>
          <span class="ds-list-item__subtitle">
            {{ strings.settings.add_description }}
          </span>
          <span class="ds-list-item__action">
            <i aria-hidden="true" class="fa fa-plus"></i>
          </span>
        </li>
      </ul>
      <div v-for="sidebar_item in sidebar">
        <div class="ds-list-title">{{ sidebar_item.title }}</div>
        <ul class="ds-list">
          <li class="ds-list-item" v-for="source in sidebar_item.items" @click="changePage(source)">
            <span class="ds-list-item__title">
              <span class="caps">{{ strings.sources[source.type] }}</span>
              <strong v-if="source.values.name">{{ source.values.name }}</strong>
            </span>
            <span class="ds-list-item__subtitle"
                 :class="{ 'ds-list-item__subtitle--errored': source.errored }">
              {{ source.details }}
            </span>
            <span class="ds-list-item__action">
              <i aria-hidden="true" class="fa fa-arrow-right"></i>
            </span>
          </li>
        </ul>
      </div>
    </div>
    <div class="ds-col ds-col--right">
      <div v-if="page === 'settings'">
        <h1>{{ strings.settings.general }}</h1>
        <form @submit="editSettings" class="ds-form">
          <label v-for="field in settings">
            {{ strings.fields[field.name] }}
            <select v-model="field.default" :required="field.required" v-if="field.type === 'select'">
              <option :value="option.value" v-for="option in field.options">{{ option.name }}</option>
            </select>
            <span v-else-if="field.type === 'seconds'"><input type="number" v-model="field.default" :required="field.required"> {{ strings.settings.seconds }}</span>
            <input type="field.type" v-model="field.default" :required="field.required" v-else>
          </label>
          <input type="submit" :value="strings.settings.save">
        </form>
      </div>

      <div v-if="page === 'new'">
        <h1>{{ strings.settings.add }}</h1>
        <h2>{{ strings.settings.ds_destination }}</h2>
        <div v-for="(name, value) in strings.categories" class="radiobox">
          <input type="radio" :id="'radiobox-dest-' + value" v-model="new_source.for" :value="value">
          <label :for="'radiobox-dest-' +value">{{ name }}</label>
        </div>
        <h2>{{ strings.settings.ds_type }}</h2>
        <div v-for="(name, value) in strings.sources" class="radiobox">
          <input type="radio" :id="'radiobox-type-' + value" v-model="new_source.type" :value="value">
          <label :for="'radiobox-type-' + value">{{ name }}</label>
        </div>
        <button @click="changePage('new/next')">{{ strings.settings.next }}</button>
      </div>

      <div v-if="page === 'new/next'">
        <h1>{{ strings.settings.add }}</h1>
        <form @submit="addSource" class="ds-form">
          <label v-for="field in types[new_source.type].fields">
            {{ strings.fields[field.name] }}
            <select v-model="new_source.values[field.name]" :required="field.required" v-if="field.type === 'select'">
              <option :value="option.value" v-for="option in field.options">{{ option.name }}</option>
            </select>
            <span v-else-if="field.type === 'seconds'"><input type="number" v-model="new_source.values[field.name]" :required="field.required"> {{ strings.settings.seconds }}</span>
            <input type="field.type" v-model="new_source.values[field.name]" :required="field.required" v-else>
          </label>
          <input type="submit" :value="strings.settings.save">
        </form>
      </div>

      <div v-if="typeof(page) === 'object'">
        <h1>{{ strings.settings.edit }} {{ strings.sources[page.type] }} <strong v-if="page.values.name">{{ page.values.name }}</strong></h1>
        <h2 :class="{'txt-errored': page.errored}">{{ page.details }}</h2>
        <form @submit="editSource" class="ds-form">
          <label v-for="field in types[page.type].fields">
            {{ strings.fields[field.name] }}
            <select v-model="page.values[field.name]" :required="field.required" v-if="field.type === 'select'">
              <option :value="option.value" v-for="option in field.options">{{ option.name }}</option>
            </select>
            <span v-else-if="field.type === 'seconds'"><input type="number" v-model="page.values[field.name]" :required="field.required"> {{ strings.settings.seconds }}</span>
            <input type="field.type" v-model="page.values[field.name]" :required="field.required" v-else>
          </label>
          <input type="submit" :value="strings.settings.save">
        </form>
      </div>
    </div>
  </div>`,
  methods: {
    updateSidebar() {
      const categories = Object.keys(this.strings.categories);
      this.sidebar = [];
      categories.map(key => {
        const items = this.sources.filter(s => s.for == key);
        if (items.length) {
          this.sidebar.push({
            title: this.strings.categories[key],
            items,
          });
        }
      });
    },
    changePage(pagename) {
      this.page = pagename;
    },
    copyObject(obj) {
      return JSON.parse(JSON.stringify(obj));
    },
    editSource(e) {
      e.preventDefault();
      this.updateSidebar();
    },
    editSettings(e) {
      e.preventDefault();
      this.updateSidebar();
    },
    addSource(e) {
      e.preventDefault();
      this.sources.push(this.new_source);
      this.changePage(this.sources.slice(-1)[0]);
      this.updateSidebar();
      this.new_source = this.copyObject(this.defaults.new_source);
    },
  },
  created() {
    this.updateSidebar();
    this.new_source = this.copyObject(this.defaults.new_source);
  },
});

new Vue({
  el: '#app',
});
</script>

[%~ ELSE ~%]
  <div class="block">

  <h2>[%|loc%]Edit List Configuration[%END%]
  <a href="[% 'nomenu/help/listconfig' | url_rel %]"
   title="[%|loc%]Open in a new window[%END%]"
   onclick="window.open('','wws_help','toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,copyhistory=no,width=800,height=400')"
   target="wws_help">
  <i class="fa fa-question-circle" title="[%|loc%]Help[%END%]"></i>
  </a>
  </h2>

  [% IF !group ~%]
    [% IF GROUP == 'description' ~%]
      [% SET class = 'menuLinksCurrentPage' %]
    [%~ ELSE ~%]
      [% SET class = 'menuLinks' %]
    [%~ END ~%]
    <p>
    [%|loc%]Here you can edit your list's configuration parameters.[% END %]
    </p>
  [%~ ELSE ~%]
    <form class="bold_label" action="[% path_cgi %]" method="post">
    <fieldset>
    <input type="hidden" name="serial" value="[% serial %]" />
    [% FOREACH pS = config_schema ~%]
      [% SET pV = config_values.${pS.name} ~%]

      [% IF pS.changed ~%]
        <div class="CurrentBlock">
      [%~ ELSE ~%]
        <div class="block">
      [%~ END ~%]
      <h4>
      [% IF pS.title ~%]
        [% pS.title %]
        [%~ IF is_listmaster %] ([% pS.name %])[% END %]
      [%~ ELSE ~%]
        [% pS.name %]
      [%~ END %]
      [%~ IF is_listmaster && pS.default_value %] [%|loc%](default)[%END%][% END %]
      <span class="edit_list_request_help">

      [%~ IF pS.scenario && is_listmaster ~%]
        &nbsp;<a class="input"
         href="[% 'dump_scenario' | url_rel([list,pS.name]) %]"
         title="[%|loc%]scenario source[%END%]">[%|loc%]scenario source[%END~%]
        </a>
      [%~ END %]

      [%~ IF pS.comment ~%]
        <a href="#" class="accordionButton"
         data-selector="#help\.[% pS.name %]">
        <i class="fa fa-question-circle" title="[%|loc%]Help[%END%]"></i>
        </a>
      [%~ END ~%]
      </span>
      </h4>

      [% IF pS.comment ~%]
        <div id="help.[% pS.name %]" class="panel radius">
        <p>[% pS.comment.replace('\n', '</p><p>') %]</p>
        </div>
      [%~ END ~%]

      [% IF pS.type == 'set' ~%]
        <div class="row">

        <div id="item.[% pS.name %]"
         class="small-9 large-10 columns">
        [% PROCESS EditListSet
           ppaths=[pS.name]
           pitem=pS
           val=pV
        %]
        </div>

        </div>
      [%~ ELSIF pS.occurrence.match('n$') ~%]

        <!-- array -->
        [% oI = 0 ~%]

        [% FOREACH oV = pV ~%]
          [% IF pS.type == 'paragraph' ~%]
            <div class="row">

            <div id="item.[% pS.name %].[% oI %]"
             class="small-9 large-10 columns">
            <!-- paragraph -->
            [% FOREACH kS = pS.format ~%]
              [% SET kV = oV.${kS.name} ~%]

              <label for="param.[% pS.name %].[% oI %].[% kS.name %]">
              [% IF kS.title ~%]
                [% kS.title %]
                [%~ IF is_listmaster %] ([% kS.name %])[% END %]
              [%~ ELSE ~%]
                [% kS.name %]
              [%~ END ~%]

              [% IF kS.comment ~%]
                <a href="#" class="accordionButton"
                 data-selector="#help\.[% pS.name %]\.[% kS.name %]">
                <i class="fa fa-question-circle" title="[%|loc%]Help[%END%]"></i>
                </a>
              [%~ END ~%]
              [%|loc%]:[%END%]
              </label>

              [% IF kS.comment ~%]
                <div id="help.[% pS.name %].[% kS.name %]" class="panel radius">
                <p>[% kS.comment.replace('\n', '</p><p>') %]</p>
                </div>
              [%~ END ~%]

              [% IF kS.type == 'set' ~%]
                [% PROCESS EditListSet
                   ppaths=[pS.name,oI,kS.name]
                   pitem=kS
                   val=kV
                %]
              [%~ ELSIF kS.type == 'leaf' ~%]
                [% PROCESS EditListLeaf
                   ppaths=[pS.name,oI,kS.name]
                   pitem=kS
                   val=kV
                %]
              [%~ END %]
            [% END %]
            <!-- end paragraph -->
            </div>

            [% UNLESS pS.occurrence.match('^1') && pV.size() == 1 ~%]
              <div class="small-3 large-2 columns">
              [% PROCESS EditListArrayDel
                 ppaths=[pS.name,oI]
                 pitem=pS
              %]
              </div>
            [%~ END %]

            </div>
            <span class="divider"></span>
          [%~ ELSE ~%]
            <div class="row">

            <div id="item.[% pS.name %].[% oI %]"
             class="small-9 large-10 columns">
            [% PROCESS EditListLeaf
               ppaths=[pS.name,oI]
               pitem=pS
               val=oV
            %]
            </div>

            [% UNLESS pS.occurrence.match('^1') && pV.size() == 1 ~%]
              <div class="small-3 large-2 columns">
              [% PROCESS EditListArrayDel
                 ppaths=[pS.name,oI]
                 pitem=pS
              %]
              </div>
            [%~ END %]

            </div>
          [%~ END %]
          [%~ oI = oI + 1 %]
        [% END %]

        [%# Additional empty section. ~%]
        [% IF pS.privilege == 'write' ~%]
          [% IF pS.type == 'paragraph' ~%]
            <div class="row">

            <div id="item.[% pS.name %].[% oI %]"
             class="small-9 large-10 columns">
            <!-- paragraph -->
            [% FOREACH kS = pS.format ~%]
              [% SET kV = kS.default # Default value. ~%]

              <label for="param.[% pS.name %].[% oI %].[% kS.name %]">
              [% IF kS.title ~%]
                [% kS.title %]
                [%~ IF is_listmaster %] ([% kS.name %])[% END %]
              [%~ ELSE ~%]
                [% kS.name %]
              [%~ END ~%]

              [% IF kS.comment ~%]
                <a href="#" class="accordionButton"
                 data-selector="#help\.[% pS.name %]\.[% kS.name %]">
                <i class="fa fa-question-circle" title="[%|loc%]Help[%END%]"></i>
                </a>
              [%~ END ~%]
              [%|loc%]:[%END%]
              </label>

              [% IF kS.comment ~%]
                <div id="help.[% pS.name %].[% kS.name %]" class="panel radius">
                <p>[% kS.comment.replace('\n', '</p><p>') %]</p>
                </div>
              [%~ END ~%]

              [% IF kS.type == 'set' ~%]
                [% PROCESS EditListSet
                   ppaths=[pS.name,oI,kS.name]
                   pitem=kS
                   val=kV
                %]
              [%~ ELSIF kS.type == 'leaf' ~%]
                [% PROCESS EditListLeaf
                   ppaths=[pS.name,oI,kS.name]
                   pitem=kS
                   val=kV
                %]
              [%~ END %]
            [% END %]
            <!-- end paragraph -->
            </div>

            </div>
          [%~ ELSE ~%]
            <div class="row">

            <div id="item.[% pS.name %].[% oI %]"
             class="small-9 large-10 columns">
            [% PROCESS EditListLeaf
               ppaths=[pS.name,oI]
               pitem=pS
               val=UNDEF # Empty value.
            %]
            </div>

            </div>
          [%~ END %]
        [%~ END %]

        <!-- end array -->
      [%~ ELSE ~%]
        [% IF pS.type == 'paragraph' ~%]
          <div class="row">

          <div id="item.[% pS.name %]"
           class="small-9 large-10 columns">
          <!-- paragraph -->
          [% FOREACH kS = pS.format ~%]
            [% SET kV = pV.${kS.name} ~%]

            <label for="param.[% pS.name %].[% kS.name %]">
            [% IF kS.title ~%]
              [% kS.title %]
              [%~ IF is_listmaster %] ([% kS.name %])[% END %]
            [%~ ELSE ~%]
              [% kS.name %]
            [%~ END ~%]

            [% IF kS.comment ~%]
              <a href="#" class="accordionButton"
               data-selector="#help\.[% pS.name %]\.[% kS.name %]">
              <i class="fa fa-question-circle" title="[%|loc%]Help[%END%]"></i>
              </a>
            [%~ END ~%]
            [%|loc%]:[%END%]
            </label>

            [% IF kS.comment ~%]
              <div id="help.[% pS.name %].[% kS.name %]" class="panel radius">
              <p>[% kS.comment.replace('\n', '</p><p>') %]</p>
              </div>
            [%~ END ~%]

            [% IF kS.type == 'set' ~%]
              [% PROCESS EditListSet
                 ppaths=[pS.name,kS.name]
                 pitem=kS
                 val=kV
              %]
            [%~ ELSIF kS.type == 'leaf' ~%]
              [% PROCESS EditListLeaf
                 ppaths=[pS.name,kS.name]
                 pitem=kS
                 val=kV
              %]
            [%~ END %]
          [% END %]
          <!-- end paragraph -->
          </div>

          </div>
        [%~ ELSIF pS.type == 'leaf' ~%]
          <div class="row">

          <div id="item.[% pS.name %]"
           class="small-9 large-10 columns">
          [% PROCESS EditListLeaf
             ppaths=[pS.name]
             pitem=pS
             val=pV
          %]
          </div>

          </div>
        [%~ END %]
      [% END %]

      [% IF pS.default_value ~%]
        <div class="row">
        <div class="columns">[%|loc%]default[%END%]</div>
        </div>
      [%~ END %]
      </div>
    [% END %]

    <input type="hidden" name="list" value="[% list %]" />
    <input type="hidden" name="group" value="[% group %]" />
    <input type="hidden" name="action" value="edit_list" />
    [% IF is_form_editable ~%]
      <input class="MainMenuLinks" type="submit" name="action_edit_list"
       value="[%|loc%]Update[%END%]" />
    [%~ END %]
    </fieldset>
    </form>
  [%~ END %]

  </div >

[%~ END %]
<!-- end edit_list_request.tt2 -->

